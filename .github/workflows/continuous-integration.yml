name: osu-wiki continuous integration

on:
  pull_request:
    branches:
      - master
    types:
      - opened
      - reopened
      - synchronize
      - edited

jobs:
  ci:
    name: changed files
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - run: git branch -f master origin/master

      - name: detect changed files
        run: |
          temp_file="$(mktemp)"

          git diff --diff-filter=d --name-only --no-renames master >"$temp_file"
          printf 'CHANGED_FILES=%s\n' "$temp_file" >>"$GITHUB_ENV"

      - name: check file sizes
        run: xargs -r meta/check-file-sizes.sh <"$CHANGED_FILES"

      - id: setup-node
        uses: actions/setup-node@v4
        with:
          cache: npm
          node-version: 20

      - name: load node_modules from cache
        id: cache-node-modules
        uses: actions/cache@v3
        with:
          path: node_modules
          key: node-modules-${{ hashFiles('package-lock.json') }}-${{ steps.setup-node.outputs.node-version }}

      - name: "if cache is outdated: install node.js dependencies"
        if: steps.cache-node-modules.outputs.cache-hit != 'true'
        run: npm ci

      - name: run remark on changed files
        if: ${{ !contains(github.event.pull_request.body, 'SKIP_REMARK') }}
        run: |
          grep '\.md$' <"$CHANGED_FILES" | \
          REPORTER=vfile-reporter-github-action xargs -r meta/remark.sh

      - name: set up Python
        uses: actions/setup-python@v4
        with:
          cache: pip
          cache-dependency-path: requirements.txt
          python-version: "3.11"

      - name: set up Python CI dependencies
        run: pip install -r requirements.txt

      - name: run yamllint on .yaml and .md files
        run: osu-wiki-tools check-yaml

      - name: find broken wikilinks
        if: ${{ !contains(github.event.pull_request.body, 'SKIP_WIKILINK_CHECK') }}
        run: osu-wiki-tools check-links --all

      - name: check if translations are marked as outdated
        if: ${{ !contains(github.event.pull_request.body, 'SKIP_OUTDATED_CHECK') }}
        run: osu-wiki-tools check-outdated-articles
